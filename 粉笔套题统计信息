from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from selenium.common.exceptions import NoSuchElementException


# 创建webdriver对象，传入webdriver的路径
webdriver_service = Service('C:\Program Files\Google\Chrome\Application/chromedriver.exe')  # 根据你的webdriver的实际存放路径修改
driver = webdriver.Chrome(service=webdriver_service)

# 访问主页面并添加cookie
driver.get("https://www.fenbi.com")

# 下面代码中的字符串需要您根据实际情况替换为您的cookie值
cookies = {
    "sensorsdata2015jssdkcross": "%7B%22distinct_id%22%3A%2218dc033fd198d2-0e6293eda583b1-4c657b58-2073600-18dc033fd1a1438%22%2C%22first_id%22%3A%22%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%2C%22%24latest_referrer%22%3A%22%22%7D%2C%22%24device_id%22%3A%2218dc033fd198d2-0e6293eda583b1-4c657b58-2073600-18dc033fd1a1438%22%7D", 
    "sid": "3112826", 
    "persistent": "Bt+YpDkpLczIeeOVTGuWoKjscjSjOwQp2cWh3767MJmAXQ0OTPp91e5c390u8b366nGAazCOVOo5Wz0TqL5MNQ==", 
    "sess": "ZDG8G4Hcj/j1ygZ7mea90SH1nyrWDAQK2YXqKCegqURHO+9R9Xsxn9qWkppjy2W/VWIiAEm/1j6YQUofRr5Hm5y1gg8TDYfgbiuwfbGCZ3w=", 
    "userid": "28740003", 
    "acw_tc": "0bd17c6617097024490592001ec7edc02f814e17be70f880f76dcbc4c85f43"
}
for cookie_name, cookie_value in cookies.items():
    driver.add_cookie({'name': cookie_name, 'value': cookie_value})

# 访问指定URL    记得更换变量
driver.get("https://www.fenbi.com/spa/tiku/report/exam/solution/xingce/xingce/2624616682/3")

# 等待页面完全加载
wait = WebDriverWait(driver, 60)

# 获取我的得分、总用时、难度、平均分的数据
header = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "div.header-content h4"))).text
my_score = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "div.my-grade-point p"))).text
total_time = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "div.my-total-time"))).text
difficulty = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "li.diff-number p.font-color-gray-mid"))).text
average_score = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "li.avg-number p.font-color-gray-mid"))).text

print(f'Header: {header}, My Score: {my_score}, Total Time: {total_time}, Difficulty: {difficulty}, Average Score: {average_score}')

# 以下代码是获取考试模块信息的示例
keypoint_info = wait.until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, "app-report-keypoints ul li")))
for keypoint in keypoint_info:
    # 获取模块名
    keypoint_name = keypoint.find_element(By.CSS_SELECTOR, "div.keypoint-tree-title h3").text
    # 获取模块信息
    keypoint_stat = keypoint.find_element(By.CSS_SELECTOR, "div.keypoint-tree-title p.pd-item-stat").text
    print(f'Keypoint Name: {keypoint_name}, Stats: {keypoint_stat}')

    # 查找子模块
    sub_module_info = keypoint.find_elements(By.CSS_SELECTOR, "section.pd-sub-category-item")
    for sub_module in sub_module_info:
        # 获取子模块名
        sub_module_name = sub_module.find_element(By.CSS_SELECTOR, "p.pd-item-name.p-r-10.font-color-gray-mid").text
        # 获取子模块信息
        sub_module_stat = sub_module.find_element(By.CSS_SELECTOR, "p.pd-item-stat").text
        print(f'  Sub Module Name: {sub_module_name}, Stats: {sub_module_stat}')

# 添加获取每道题目信息的代码段
questions = wait.until(EC.presence_of_all_elements_located(
    (By.CSS_SELECTOR, "div.question"))) # 请更换为匹配题目的正确选择器

for question in questions:
    # 获取考点信息
    keypoints = [item.text for item in question.find_elements(By.CSS_SELECTOR, "ul.keypoint-list button")]
    
    # 获取正确率和答题时间信息
    correct_rate = question.find_element(By.CSS_SELECTOR, "p.correct-rate span").text
    answer_time = question.find_element(By.CSS_SELECTOR, "p.ans-time span").text
    
    # 获取是否正确的信息
    correct_answer = question.find_element(By.CSS_SELECTOR, 'span.correct-text').text
    try:
        your_answer = question.find_element(By.CSS_SELECTOR, 'span.error-text').text
        is_correct = False  # 如果能找到 error-text 元素，说明答案错误
    except NoSuchElementException:
        your_answer = None  # 如果没有找到 error-text 元素，说明答案正确
        is_correct = True
    
    print(f"Keypoints: {keypoints}, Correct Rate: {correct_rate}, "
          f"Answer Time: {answer_time}, Is Correct: {is_correct}")

# 关闭浏览器
driver.quit()
